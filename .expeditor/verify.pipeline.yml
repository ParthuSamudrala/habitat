steps:
  # - label: "Shellcheck :linux: :bash:"
  #   skip: Waiting to fix
  #   command:
  #     - ./test/shellcheck.sh
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: builder-api-client"
  #   command:
  #     - ./test/run_cargo_test.sh builder-api-client
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: butterfly"
  #   command:
  #     - ./test/run_cargo_test.sh butterfly
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: common"
  #   command:
  #     - ./test/run_cargo_test.sh common
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: eventsrv"
  #   command:
  #     - ./test/run_cargo_test.sh eventsrv
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: eventsrv-client"
  #   command:
  #     - ./test/run_cargo_test.sh eventsrv-client
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: eventsrv-protocol"
  #   command:
  #     - ./test/run_cargo_test.sh eventsrv-protocol
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: hab"
  #   command:
  #     - ./test/run_cargo_test.sh hab
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: launcher-client"
  #   command:
  #     - ./test/run_cargo_test.sh launcher-client
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: launcher-protocol"
  #   command:
  #     - ./test/run_cargo_test.sh launcher-protocol
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: pkg-export-docker"
  #   command:
  #     - ./test/run_cargo_test.sh pkg-export-docker
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: pkg-export-helm"
  #   command:
  #     - ./test/run_cargo_test.sh pkg-export-helm
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: pkg-export-kubernetes"
  #   command:
  #     - ./test/run_cargo_test.sh pkg-export-kubernetes
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: pkg-export-tar"
  #   command:
  #     - ./test/run_cargo_test.sh pkg-export-tar
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: sup"
  #   command:
  #     - ./test/run_cargo_test.sh sup
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: sup-client"
  #   command:
  #     - ./test/run_cargo_test.sh sup-client
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

   # - label: "[unit] :linux: sup-protocol"
  #   command:
  #     - ./test/run_cargo_test.sh sup-protocol
  #   agents:
  #     queue: 'docker-privileged'
  #   plugins:
  #     docker#v2.1.0:
  #       image: "chefes/buildkite"

 #################################################################


   # - label: "[unit] :windows: builder-api-client"
  #   command:
  #     - ./test/run_cargo_test.ps1 builder-api-client
  #   agents:
  #     queue: 'windows-docker'

   - label: "[unit] :windows: butterfly"
    command:
      - ./test/run_cargo_test.ps1 butterfly
    agents:
      queue: 'windows-docker'

   # - label: "[unit] :windows: common"
  #   command:
  #     - ./test/run_cargo_test.ps1 common
  #   agents:
  #     queue: 'windows-docker'

   # - label: "[unit] :windows: eventsrv"
  #   command:
  #     - ./test/run_cargo_test.ps1 eventsrv
  #   agents:
  #     queue: 'windows-docker'

   # - label: "[unit] :windows: eventsrv-client"
  #   command:
  #     - ./test/run_cargo_test.ps1 eventsrv-client
  #   agents:
  #     queue: 'windows-docker'

   # - label: "[unit] :windows: eventsrv-protocol"
  #   command:
  #     - ./test/run_cargo_test.ps1 eventsrv-protocol
  #   agents:
  #     queue: 'windows-docker'

   # - label: "[unit] :windows: hab"
  #   command:
  #     - ./test/run_cargo_test.ps1 hab
  #   agents:
  #     queue: 'windows-docker'

   # - label: "[unit] :windows: launcher-client"
  #   command:
  #     - ./test/run_cargo_test.ps1 launcher-client
  #   agents:
  #     queue: 'windows-docker'

   # - label: "[unit] :windows: launcher-protocol"
  #   command:
  #     - ./test/run_cargo_test.ps1 launcher-protocol
  #   agents:
  #     queue: 'windows-docker'

   - label: "[unit] :windows: pkg-export-docker"
    command:
      - ./test/run_cargo_test.ps1 pkg-export-docker
    agents:
      queue: 'windows-docker'

   # - label: "[unit] :windows: pkg-export-helm"
  #   command:
  #     - ./test/run_cargo_test.ps1 pkg-export-helm
  #   agents:
  #     queue: 'windows-docker'

   - label: "[unit] :windows: pkg-export-kubernetes"
    command:
      - ./test/run_cargo_test.ps1 pkg-export-kubernetes
    agents:
      queue: 'windows-docker'

   # - label: "[unit] :windows: pkg-export-tar"
  #   command:
  #     - ./test/run_cargo_test.ps1 pkg-export-tar
  #   agents:
  #     queue: 'windows-docker'

   - label: "[unit] :windows: sup"
    command:
      - ./test/run_cargo_test.ps1 sup
    agents:
      queue: 'windows-docker'

   # - label: "[unit] :windows: sup-client"
  #   command:
  #     - ./test/run_cargo_test.ps1 sup-client
  #   agents:
  #     queue: 'windows-docker'

   # - label: "[unit] :windows: sup-protocol"
  #   command:
  #     - ./test/run_cargo_test.ps1 sup-protocol
  #   agents:
  #     queue: 'windows-docker' 
